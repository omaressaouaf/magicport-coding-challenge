version: "3"

networks:
    magicport-coding-challenge:

services:
    nginx:
        networks:
            - magicport-coding-challenge
        image: "nginx:stable-alpine"
        container_name: nginx
        ports:
            - "8088:80"
        volumes:
            - ".:/var/www/html"
            - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
        depends_on:
            - php
            - mysql

    mysql:
        platform: linux/x86_64
        image: "mysql:5.7.22"
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - "4306:3306"
        volumes:
            - "./mysql/dev:/var/lib/mysql"
        environment:
            MYSQL_DATABASE: magicport_coding_challenge
            MYSQL_USER: admin
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - magicport-coding-challenge

    mysql_testing:
        platform: linux/x86_64
        image: "mysql:5.7.22"
        container_name: mysql_testing
        restart: unless-stopped
        tty: true
        ports:
            - "4307:3306"
        volumes:
            - "./mysql/testing:/var/lib/mysql"
        environment:
            MYSQL_DATABASE: magicport_coding_challenge_testing
            MYSQL_USER: admin
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password
            SERVICE_TAGS: testing
            SERVICE_NAME: mysql
        networks:
            - magicport-coding-challenge

    php:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: php
        volumes:
            - ".:/var/www/html"
        ports:
            - "9000:9000"
        networks:
            - magicport-coding-challenge

    composer:
        image: composer:latest
        container_name: composer
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        networks:
            - magicport-coding-challenge

    npm:
        image: node:latest
        container_name: npm
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        entrypoint: ["npm"]
        networks:
            - magicport-coding-challenge

    artisan:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: artisan
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: ["/var/www/html/artisan"]
        networks:
            - magicport-coding-challenge
